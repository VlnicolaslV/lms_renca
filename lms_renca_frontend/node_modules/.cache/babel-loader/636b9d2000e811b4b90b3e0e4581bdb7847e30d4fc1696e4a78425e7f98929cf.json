{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:8000/api/usuario/';\nconst login = async (rut, password) => {\n  try {\n    const response = await axios.post(API_URL + 'token/', {\n      rut,\n      password\n    });\n\n    // Verifica y guarda los tokens\n    if (response.data.access && response.data.refresh) {\n      console.log(\"Tokens recibidos:\", response.data);\n      localStorage.setItem('token', response.data.access);\n      document.cookie = `refresh=${response.data.refresh}; path=/; SameSite=Lax; Secure`;\n\n      // Verificar las cookies después de guardarlas\n      console.log(\"Cookies después de login:\", document.cookie);\n    } else {\n      console.error(\"Falta el token de acceso o de actualización.\");\n    }\n    return response.data;\n  } catch (error) {\n    console.error(\"Error al iniciar sesión:\", error);\n    throw error;\n  }\n};\nconst getUserData = async () => {\n  try {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      throw new Error('No se ha encontrado un token de acceso');\n    }\n    const response = await axios.get(API_URL + 'profile/', {\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error al obtener los datos del usuario:\", error);\n    throw error;\n  }\n};\nconst cerrarSesion = () => {\n  localStorage.removeItem('token');\n  document.cookie = 'refresh=; path=/; expires=Thu, 01 Jan 1970 00:00:00 UTC; SameSite=Lax; Secure';\n};\nconst authService = {\n  login,\n  getUserData,\n  cerrarSesion\n};\nexport default authService;","map":{"version":3,"names":["axios","API_URL","login","rut","password","response","post","data","access","refresh","console","log","localStorage","setItem","document","cookie","error","getUserData","token","getItem","Error","get","headers","cerrarSesion","removeItem","authService"],"sources":["C:/Users/aggro/OneDrive/Desktop/LMS/lms_renca_frontend/src/services/authService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:8000/api/usuario/';\r\n\r\nconst login = async (rut, password) => {\r\n  try {\r\n    const response = await axios.post(API_URL + 'token/', {\r\n      rut,\r\n      password,\r\n    });\r\n\r\n    // Verifica y guarda los tokens\r\n    if (response.data.access && response.data.refresh) {\r\n      console.log(\"Tokens recibidos:\", response.data);\r\n      localStorage.setItem('token', response.data.access);\r\n      document.cookie = `refresh=${response.data.refresh}; path=/; SameSite=Lax; Secure`;\r\n\r\n      // Verificar las cookies después de guardarlas\r\n      console.log(\"Cookies después de login:\", document.cookie);\r\n    } else {\r\n      console.error(\"Falta el token de acceso o de actualización.\");\r\n    }\r\n\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error al iniciar sesión:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst getUserData = async () => {\r\n  try {\r\n    const token = localStorage.getItem('token');\r\n    \r\n    if (!token) {\r\n      throw new Error('No se ha encontrado un token de acceso');\r\n    }\r\n    \r\n    const response = await axios.get(API_URL + 'profile/', {\r\n      headers: {\r\n        'Authorization': `Bearer ${token}`\r\n      }\r\n    });\r\n    \r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error al obtener los datos del usuario:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst cerrarSesion = () => {\r\n  localStorage.removeItem('token');\r\n  document.cookie = 'refresh=; path=/; expires=Thu, 01 Jan 1970 00:00:00 UTC; SameSite=Lax; Secure';\r\n}\r\n\r\n\r\nconst authService = {\r\n  login,\r\n  getUserData,\r\n  cerrarSesion,\r\n};\r\n\r\nexport default authService;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,oCAAoC;AAEpD,MAAMC,KAAK,GAAG,MAAAA,CAAOC,GAAG,EAAEC,QAAQ,KAAK;EACrC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAACL,OAAO,GAAG,QAAQ,EAAE;MACpDE,GAAG;MACHC;IACF,CAAC,CAAC;;IAEF;IACA,IAAIC,QAAQ,CAACE,IAAI,CAACC,MAAM,IAAIH,QAAQ,CAACE,IAAI,CAACE,OAAO,EAAE;MACjDC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEN,QAAQ,CAACE,IAAI,CAAC;MAC/CK,YAAY,CAACC,OAAO,CAAC,OAAO,EAAER,QAAQ,CAACE,IAAI,CAACC,MAAM,CAAC;MACnDM,QAAQ,CAACC,MAAM,GAAG,WAAWV,QAAQ,CAACE,IAAI,CAACE,OAAO,gCAAgC;;MAElF;MACAC,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEG,QAAQ,CAACC,MAAM,CAAC;IAC3D,CAAC,MAAM;MACLL,OAAO,CAACM,KAAK,CAAC,8CAA8C,CAAC;IAC/D;IAEA,OAAOX,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOS,KAAK,EAAE;IACdN,OAAO,CAACM,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD,MAAMA,KAAK;EACb;AACF,CAAC;AAED,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;EAC9B,IAAI;IACF,MAAMC,KAAK,GAAGN,YAAY,CAACO,OAAO,CAAC,OAAO,CAAC;IAE3C,IAAI,CAACD,KAAK,EAAE;MACV,MAAM,IAAIE,KAAK,CAAC,wCAAwC,CAAC;IAC3D;IAEA,MAAMf,QAAQ,GAAG,MAAML,KAAK,CAACqB,GAAG,CAACpB,OAAO,GAAG,UAAU,EAAE;MACrDqB,OAAO,EAAE;QACP,eAAe,EAAE,UAAUJ,KAAK;MAClC;IACF,CAAC,CAAC;IAEF,OAAOb,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOS,KAAK,EAAE;IACdN,OAAO,CAACM,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC;IAC/D,MAAMA,KAAK;EACb;AACF,CAAC;AAED,MAAMO,YAAY,GAAGA,CAAA,KAAM;EACzBX,YAAY,CAACY,UAAU,CAAC,OAAO,CAAC;EAChCV,QAAQ,CAACC,MAAM,GAAG,+EAA+E;AACnG,CAAC;AAGD,MAAMU,WAAW,GAAG;EAClBvB,KAAK;EACLe,WAAW;EACXM;AACF,CAAC;AAED,eAAeE,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}