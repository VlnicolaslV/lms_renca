{"ast":null,"code":"import axios from'axios';const API_BASE_URL='http://localhost:8000/api/municipalidad/';const authHeader=()=>{const token=localStorage.getItem('token');if(token){return{Authorization:`Bearer ${token}`};}return{};};export const AdministradorService={// Función para crear un colegio \ncrearColegio:async data=>{try{const response=await axios.post(`${API_BASE_URL}colegios/`,data,{headers:authHeader()});return response.data;}catch(error){console.error(\"Error al crear colegio:\",error);throw error;}},// Función para crear un director\ncrearDirector:async data=>{try{const response=await axios.post(`${API_BASE_URL}directores/`,data,{headers:authHeader()});return response.data;}catch(error){console.error(\"Error al crear director:\",error);throw error;}},// Función para obtener municipalidades\nobtenerMunicipalidades:async()=>{try{const response=await axios.get(`${API_BASE_URL}municipalidades/`,{headers:authHeader()});return response.data.municipalidades;}catch(error){console.error(\"Error al obtener municipalidades:\",error);throw error;}},// Función para obtener colegios \nobtenerColegios:async()=>{try{const response=await axios.get(`${API_BASE_URL}colegios/listar/`,{headers:authHeader()});return response.data;}catch(error){console.error(\"Error al obtener colegios:\",error);throw error;}},// Función para obtener directores\nobtenerDirectores:async()=>{try{const response=await axios.get(`${API_BASE_URL}directores/listar/`,{headers:authHeader()});return response.data.directores;}catch(error){console.error(\"Error al obtener directores:\",error);throw error;}},// Funcion para obtener los directores sin colegio asociado\nobtenerDirectoresSinColegio:async()=>{try{const response=await axios.get(`${API_BASE_URL}directores/sin-colegio/`,{headers:authHeader()});return response.data.directores;}catch(error){console.error(\"Error al obtener directores sin colegio:\",error);throw error;}},// Función para obtener cursos\nobtenerCursos:async()=>{try{const response=await axios.get(`${API_BASE_URL}cursos/`,{headers:authHeader()});return response.data.cursos;}catch(error){console.error(\"Error al obtener cursos:\",error);throw error;}},// Función para obtener asignaturas\nobtenerAsignaturas:async()=>{try{const response=await axios.get(`${API_BASE_URL}asignaturas/`,{headers:authHeader()});return response.data.asignaturas;}catch(error){console.error(\"Error al obtener asignaturas:\",error);throw error;}},// Función para obtener inscripciones\nobtenerInscripciones:async()=>{try{const response=await axios.get(`${API_BASE_URL}inscripciones/`,{headers:authHeader()});return response.data.inscripciones;}catch(error){console.error(\"Error al obtener inscripciones:\",error);throw error;}},// Función para eliminar colegio\neliminarColegio:async id=>{try{const response=await axios.delete(`${API_BASE_URL}colegios/eliminar/${id}/`,{headers:authHeader()});return response.data;}catch(error){console.error(\"Error al eliminar colegio:\",error);throw error;}},// Función para obtener resultados\nobtenerResultados:async()=>{try{const response=await axios.get(`${API_BASE_URL}resultados/`,{headers:authHeader()});return response.data;}catch(error){console.error(\"Error al obtener resultados:\",error);throw error;}}};export default AdministradorService;","map":{"version":3,"names":["axios","API_BASE_URL","authHeader","token","localStorage","getItem","Authorization","AdministradorService","crearColegio","data","response","post","headers","error","console","crearDirector","obtenerMunicipalidades","get","municipalidades","obtenerColegios","obtenerDirectores","directores","obtenerDirectoresSinColegio","obtenerCursos","cursos","obtenerAsignaturas","asignaturas","obtenerInscripciones","inscripciones","eliminarColegio","id","delete","obtenerResultados"],"sources":["C:/Users/aggro/OneDrive/Desktop/Nueva carpeta (3)/LMS/lms_renca_frontend/src/services/administradorService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = 'http://localhost:8000/api/municipalidad/';\r\n\r\nconst authHeader = () => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n        return { Authorization: `Bearer ${token}` };\r\n    }\r\n    return {};\r\n};\r\n\r\nexport const AdministradorService = {\r\n    // Función para crear un colegio \r\n    crearColegio: async (data) => { \r\n        try { \r\n            const response = await axios.post(`${API_BASE_URL}colegios/`, data, { headers: authHeader() }); \r\n            return response.data; \r\n        } catch (error) { \r\n            console.error(\"Error al crear colegio:\", error); \r\n            throw error; \r\n        } \r\n    },\r\n    // Función para crear un director\r\n    crearDirector: async (data) => {\r\n        try {\r\n            const response = await axios.post(`${API_BASE_URL}directores/`, data, { headers: authHeader() });\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error(\"Error al crear director:\", error);\r\n            throw error;\r\n        }\r\n    },\r\n    // Función para obtener municipalidades\r\n    obtenerMunicipalidades: async () => {\r\n        try {\r\n            const response = await axios.get(`${API_BASE_URL}municipalidades/`, { headers: authHeader() });\r\n            return response.data.municipalidades;\r\n        } catch (error) {\r\n            console.error(\"Error al obtener municipalidades:\", error);\r\n            throw error;\r\n        }\r\n    }, \r\n    // Función para obtener colegios \r\n    obtenerColegios: async () => { \r\n        try { \r\n            const response = await axios.get(`${API_BASE_URL}colegios/listar/`, { headers: authHeader() }); \r\n            return response.data; \r\n        } catch (error) { \r\n            console.error(\"Error al obtener colegios:\", error); \r\n            throw error; \r\n        } \r\n    },\r\n    // Función para obtener directores\r\n    obtenerDirectores: async () => {\r\n        try {\r\n            const response = await axios.get(`${API_BASE_URL}directores/listar/`, { headers: authHeader() });\r\n            return response.data.directores;\r\n        } catch (error) {\r\n            console.error(\"Error al obtener directores:\", error);\r\n            throw error;\r\n        }\r\n    },\r\n    // Funcion para obtener los directores sin colegio asociado\r\n    obtenerDirectoresSinColegio: async () => {\r\n        try {\r\n            const response = await axios.get(`${API_BASE_URL}directores/sin-colegio/`, { headers: authHeader() });\r\n            return response.data.directores;\r\n        } catch (error) {\r\n            console.error(\"Error al obtener directores sin colegio:\", error);\r\n            throw error;\r\n        }\r\n    },\r\n    // Función para obtener cursos\r\n    obtenerCursos: async () => {\r\n        try {\r\n            const response = await axios.get(`${API_BASE_URL}cursos/`, { headers: authHeader() });\r\n            return response.data.cursos;\r\n        } catch (error) {\r\n            console.error(\"Error al obtener cursos:\", error);\r\n            throw error;\r\n        }\r\n    },\r\n    // Función para obtener asignaturas\r\n    obtenerAsignaturas: async () => {\r\n        try {\r\n            const response = await axios.get(`${API_BASE_URL}asignaturas/`, { headers: authHeader() });\r\n            return response.data.asignaturas;\r\n        } catch (error) {\r\n            console.error(\"Error al obtener asignaturas:\", error);\r\n            throw error;\r\n        }\r\n    },\r\n    // Función para obtener inscripciones\r\n    obtenerInscripciones: async () => {\r\n        try {\r\n            const response = await axios.get(`${API_BASE_URL}inscripciones/`, { headers: authHeader() });\r\n            return response.data.inscripciones;\r\n        } catch (error) {\r\n            console.error(\"Error al obtener inscripciones:\", error);\r\n            throw error;\r\n        }\r\n    },\r\n    // Función para eliminar colegio\r\n    eliminarColegio: async (id) => {\r\n        try {\r\n            const response = await axios.delete(`${API_BASE_URL}colegios/eliminar/${id}/`, { headers: authHeader() });\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error(\"Error al eliminar colegio:\", error);\r\n            throw error;\r\n        }\r\n    },\r\n    // Función para obtener resultados\r\n    obtenerResultados: async () => {\r\n        try {\r\n            const response = await axios.get(`${API_BASE_URL}resultados/`, { headers: authHeader() });\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error(\"Error al obtener resultados:\", error);\r\n            throw error;\r\n        }\r\n    },\r\n};\r\n\r\nexport default AdministradorService;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}