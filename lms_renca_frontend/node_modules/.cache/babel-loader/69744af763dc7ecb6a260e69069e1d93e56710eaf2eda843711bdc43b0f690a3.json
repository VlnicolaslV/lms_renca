{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aggro\\\\OneDrive\\\\Desktop\\\\Nueva carpeta (3)\\\\LMS\\\\lms_renca_frontend\\\\src\\\\components\\\\profesor\\\\VerTareas.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport profesorService from '../../services/profesorService';\nimport { Button, Card, CardBody, CardTitle, CardText } from 'reactstrap';\nimport './profesorCss/verTareas.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VerTareas = ({\n  idCursoAsignatura,\n  setSubSubSelectedOption\n}) => {\n  _s();\n  const [tareas, setTareas] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const fetchTareas = async () => {\n      try {\n        const tareasData = await profesorService.obtenerTareas(idCursoAsignatura);\n        setTareas(tareasData);\n      } catch (error) {\n        console.error(\"Error al obtener las tareas:\", error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchTareas();\n  }, [idCursoAsignatura]);\n  const handleCrearTarea = useCallback(() => {\n    setSubSubSelectedOption('crearTarea', idCursoAsignatura);\n  }, [setSubSubSelectedOption, idCursoAsignatura]);\n  const calificarTarea = useCallback(idTarea => {\n    console.log(\"Calificar tarea:\", idTarea);\n  }, []);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Cargando tareas...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ver-tareas-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Tareas Realizadas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      color: \"primary\",\n      onClick: handleCrearTarea,\n      style: {\n        marginBottom: '20px'\n      },\n      children: \"Crear Nueva Tarea\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tareas-grid\",\n      children: tareas.map(({\n        id,\n        titulo,\n        descripcion,\n        archivo,\n        fecha_publicacion,\n        fecha_entrega\n      }) => /*#__PURE__*/_jsxDEV(Card, {\n        className: \"tarea-card\",\n        children: /*#__PURE__*/_jsxDEV(CardBody, {\n          children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n            tag: \"h5\",\n            children: titulo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(CardText, {\n            children: [descripcion, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 46\n            }, this), archivo && /*#__PURE__*/_jsxDEV(\"a\", {\n              href: `http://localhost:8000/${archivo}`,\n              download: true,\n              children: \"Descargar Archivo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 121\n            }, this), \"Fecha de Publicaci\\xF3n: \", new Date(fecha_publicacion).toLocaleDateString(), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 105\n            }, this), \"Fecha de Entrega: \", new Date(fecha_entrega).toLocaleDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            onClick: () => calificarTarea(id),\n            children: \"Calificar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this)\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(VerTareas, \"mSZxDTPYWU0g9hvvHNkGYGYei3k=\");\n_c = VerTareas;\nexport default VerTareas;\nvar _c;\n$RefreshReg$(_c, \"VerTareas\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","profesorService","Button","Card","CardBody","CardTitle","CardText","jsxDEV","_jsxDEV","VerTareas","idCursoAsignatura","setSubSubSelectedOption","_s","tareas","setTareas","isLoading","setIsLoading","fetchTareas","tareasData","obtenerTareas","error","console","handleCrearTarea","calificarTarea","idTarea","log","children","fileName","_jsxFileName","lineNumber","columnNumber","className","color","onClick","style","marginBottom","map","id","titulo","descripcion","archivo","fecha_publicacion","fecha_entrega","tag","href","download","Date","toLocaleDateString","_c","$RefreshReg$"],"sources":["C:/Users/aggro/OneDrive/Desktop/Nueva carpeta (3)/LMS/lms_renca_frontend/src/components/profesor/VerTareas.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport profesorService from '../../services/profesorService';\r\nimport { Button, Card, CardBody, CardTitle, CardText } from 'reactstrap';\r\nimport './profesorCss/verTareas.css';\r\n\r\nconst VerTareas = ({ idCursoAsignatura, setSubSubSelectedOption }) => {\r\n    const [tareas, setTareas] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const fetchTareas = async () => {\r\n            try {\r\n                const tareasData = await profesorService.obtenerTareas(idCursoAsignatura);\r\n                setTareas(tareasData);\r\n            } catch (error) {\r\n                console.error(\"Error al obtener las tareas:\", error);\r\n            } finally {\r\n                setIsLoading(false);\r\n            }\r\n        };\r\n        fetchTareas();\r\n    }, [idCursoAsignatura]);\r\n\r\n    const handleCrearTarea = useCallback(() => {\r\n        setSubSubSelectedOption('crearTarea', idCursoAsignatura);\r\n    }, [setSubSubSelectedOption, idCursoAsignatura]);\r\n\r\n    const calificarTarea = useCallback((idTarea) => {\r\n        console.log(\"Calificar tarea:\", idTarea);\r\n    }, []);\r\n\r\n    if (isLoading) {\r\n        return <div>Cargando tareas...</div>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"ver-tareas-container\">\r\n            <h2>Tareas Realizadas</h2>\r\n            <Button color=\"primary\" onClick={handleCrearTarea} style={{ marginBottom: '20px' }}>Crear Nueva Tarea</Button>\r\n            <div className=\"tareas-grid\">\r\n                {tareas.map(({ id, titulo, descripcion, archivo, fecha_publicacion, fecha_entrega }) => (\r\n                    <Card key={id} className=\"tarea-card\">\r\n                        <CardBody>\r\n                            <CardTitle tag=\"h5\">{titulo}</CardTitle>\r\n                            <CardText>\r\n                                {descripcion}<br />\r\n                                {archivo && <a href={`http://localhost:8000/${archivo}`} download>Descargar Archivo</a>}<br />\r\n                                Fecha de Publicaci√≥n: {new Date(fecha_publicacion).toLocaleDateString()}<br />\r\n                                Fecha de Entrega: {new Date(fecha_entrega).toLocaleDateString()}\r\n                            </CardText>\r\n                            <Button color=\"primary\" onClick={() => calificarTarea(id)}>Calificar</Button>\r\n                        </CardBody>\r\n                    </Card>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default VerTareas;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}