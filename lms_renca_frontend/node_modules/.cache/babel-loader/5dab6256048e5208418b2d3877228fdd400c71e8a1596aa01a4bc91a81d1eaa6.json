{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:8000/api/usuario/';\n\n// Función para obtener el token del localStorage (puedes moverla a un archivo utils.js si la usas en varios servicios)\nconst obtenerToken = () => {\n  return localStorage.getItem('token');\n};\n\n// Interceptor para añadir el token a las cabeceras de las solicitudes\naxios.interceptors.request.use(config => {\n  const token = obtenerToken();\n  if (token) {\n    config.headers.Authorization = `Token ${token}`; // Usar \"Token\" en lugar de \"Bearer\"\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\nconst getUserData = async () => {\n  try {\n    // Ya no necesitas añadir el token manualmente aquí, el interceptor lo hará\n    const response = await axios.get(API_URL + 'profile/');\n    return response.data;\n  } catch (error) {\n    console.error(\"Error al obtener los datos del usuario:\", error);\n    throw error;\n  }\n};\nconst authService = {\n  getUserData\n};\nexport default authService;","map":{"version":3,"names":["axios","API_URL","obtenerToken","localStorage","getItem","interceptors","request","use","config","token","headers","Authorization","error","Promise","reject","getUserData","response","get","data","console","authService"],"sources":["C:/Users/aggro/OneDrive/Desktop/LMS/lms_renca_frontend/src/services/authService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:8000/api/usuario/';\r\n\r\n// Función para obtener el token del localStorage (puedes moverla a un archivo utils.js si la usas en varios servicios)\r\nconst obtenerToken = () => {\r\n  return localStorage.getItem('token');\r\n};\r\n\r\n// Interceptor para añadir el token a las cabeceras de las solicitudes\r\naxios.interceptors.request.use(\r\n  (config) => {\r\n    const token = obtenerToken();\r\n    if (token) {\r\n      config.headers.Authorization = `Token ${token}`; // Usar \"Token\" en lugar de \"Bearer\"\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nconst getUserData = async () => {\r\n  try {\r\n    // Ya no necesitas añadir el token manualmente aquí, el interceptor lo hará\r\n    const response = await axios.get(API_URL + 'profile/'); \r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error al obtener los datos del usuario:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst authService = {\r\n  getUserData,\r\n};\r\n\r\nexport default authService;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,oCAAoC;;AAEpD;AACA,MAAMC,YAAY,GAAGA,CAAA,KAAM;EACzB,OAAOC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;AACtC,CAAC;;AAED;AACAJ,KAAK,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CAC3BC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGP,YAAY,CAAC,CAAC;EAC5B,IAAIO,KAAK,EAAE;IACTD,MAAM,CAACE,OAAO,CAACC,aAAa,GAAG,SAASF,KAAK,EAAE,CAAC,CAAC;EACnD;EACA,OAAOD,MAAM;AACf,CAAC,EACAI,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,MAAMG,WAAW,GAAG,MAAAA,CAAA,KAAY;EAC9B,IAAI;IACF;IACA,MAAMC,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAAChB,OAAO,GAAG,UAAU,CAAC;IACtD,OAAOe,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAON,KAAK,EAAE;IACdO,OAAO,CAACP,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC;IAC/D,MAAMA,KAAK;EACb;AACF,CAAC;AAED,MAAMQ,WAAW,GAAG;EAClBL;AACF,CAAC;AAED,eAAeK,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}