{"ast":null,"code":"//LMS/lms_renca_frontend/src/services/directorService.js\nimport axios from 'axios';\nconst API_URL = 'http://localhost:8000/api/director/';\n\n// Función para obtener el token del localStorage\nconst obtenerToken = () => {\n  return localStorage.getItem('token');\n};\n\n// Interceptor para añadir el token a las cabeceras de las solicitudes\naxios.interceptors.request.use(config => {\n  const token = obtenerToken();\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`; // Usar \"Bearer\"\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\nconst crearCurso = async cursoData => {\n  try {\n    const response = await axios.post(API_URL + 'crear_curso/', cursoData);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error al crear el curso:\", error);\n    // Mostrar un mensaje de error al usuario\n    if (error.response) {\n      // La solicitud se hizo y el servidor respondió con un estado de error\n      // (por ejemplo, 4xx o 5xx)\n      console.error(\"Datos de la respuesta de error:\", error.response.data);\n      console.error(\"Estado de la respuesta de error:\", error.response.status);\n      // Puedes mostrar un mensaje al usuario basado en el error.response.status\n      if (error.response.status === 400) {\n        alert(\"Error al crear el curso: datos inválidos.\");\n      } else {\n        alert(\"Error al crear el curso. Por favor, inténtalo de nuevo más tarde.\");\n      }\n    } else if (error.request) {\n      // La solicitud se hizo pero no se recibió respuesta\n      console.error(\"Solicitud de error:\", error.request);\n      alert(\"Error de red: No se pudo conectar con el servidor.\");\n    } else {\n      // Algo sucedió al configurar la solicitud que provocó un error\n      console.error(\"Error:\", error.message);\n      alert(\"Error inesperado: \" + error.message);\n    }\n    // Puedes retornar un valor por defecto o lanzar una excepción\n    // para manejar el error en el componente\n    return null; // O lanzar una excepción: throw new Error(\"Error al crear el curso\");\n  }\n};\nconst crearProfesor = async profesorData => {\n  try {\n    const response = await axios.post(API_URL + 'crear_profesor/', profesorData);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error al crear el profesor:\", error);\n    // Mostrar un mensaje de error al usuario (similar al manejo de errores en crearCurso)\n    return null;\n  }\n};\nconst crearEstudiante = async estudianteData => {\n  try {\n    const response = await axios.post(API_URL + 'crear_estudiante/', estudianteData);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error al crear el estudiante:\", error);\n    // Mostrar un mensaje de error al usuario (similar al manejo de errores en crearCurso)\n    return null;\n  }\n};\nconst crearAsignatura = async asignaturaData => {\n  try {\n    const response = await axios.post(API_URL + 'crear_asignatura/', asignaturaData);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error al crear la asignatura:\", error);\n    // Mostrar un mensaje de error al usuario (similar al manejo de errores en crearCurso)\n    return null;\n  }\n};\nconst obtenerCursos = async () => {\n  try {\n    const response = await axios.get(API_URL + 'cursos/');\n    return response.data;\n  } catch (error) {\n    console.error(\"Error al obtener los cursos:\", error);\n    // Mostrar un mensaje de error al usuario (similar al manejo de errores en crearCurso)\n    return [];\n  }\n};\nconst obtenerProfesores = async () => {\n  try {\n    const response = await axios.get(API_URL + 'profesores/');\n    return response.data;\n  } catch (error) {\n    console.error(\"Error al obtener los profesores:\", error);\n    // Mostrar un mensaje de error al usuario (similar al manejo de errores en crearCurso)\n    return [];\n  }\n};\nconst obtenerEstudiantes = async () => {\n  try {\n    const response = await axios.get(API_URL + 'estudiantes/');\n    return response.data;\n  } catch (error) {\n    console.error(\"Error al obtener los estudiantes:\", error);\n    // Mostrar un mensaje de error al usuario (similar al manejo de errores en crearCurso)\n    return [];\n  }\n};\nconst obtenerAsignaturas = async () => {\n  try {\n    const response = await axios.get(API_URL + 'asignaturas/');\n    return response.data;\n  } catch (error) {\n    console.error(\"Error al obtener las asignaturas:\", error);\n    // Mostrar un mensaje de error al usuario (similar al manejo de errores en crearCurso)\n    return [];\n  }\n};\nconst obtenerReporteAsistencia = async () => {\n  try {\n    const response = await axios.get(API_URL + 'reporte_asistencia/');\n    return response;\n  } catch (error) {\n    console.error(\"Error al obtener el reporte de asistencia:\", error);\n    // Mostrar un mensaje de error al usuario (similar al manejo de errores en crearCurso)\n    return null;\n  }\n};\nconst obtenerReporteCalificaciones = async () => {\n  try {\n    const response = await axios.get(API_URL + 'reporte_calificaciones/');\n    return response;\n  } catch (error) {\n    console.error(\"Error al obtener el reporte de calificaciones:\", error);\n    // Mostrar un mensaje de error al usuario (similar al manejo de errores en crearCurso)\n    return null;\n  }\n};\nconst directorService = {\n  crearCurso,\n  crearProfesor,\n  crearEstudiante,\n  crearAsignatura,\n  obtenerCursos,\n  obtenerProfesores,\n  obtenerEstudiantes,\n  obtenerAsignaturas,\n  obtenerReporteAsistencia,\n  obtenerReporteCalificaciones\n};\nexport default directorService;","map":{"version":3,"names":["axios","API_URL","obtenerToken","localStorage","getItem","interceptors","request","use","config","token","headers","Authorization","error","Promise","reject","crearCurso","cursoData","response","post","data","console","status","alert","message","crearProfesor","profesorData","crearEstudiante","estudianteData","crearAsignatura","asignaturaData","obtenerCursos","get","obtenerProfesores","obtenerEstudiantes","obtenerAsignaturas","obtenerReporteAsistencia","obtenerReporteCalificaciones","directorService"],"sources":["C:/Users/aggro/OneDrive/Desktop/LMS/lms_renca_frontend/src/services/directorService.js"],"sourcesContent":["//LMS/lms_renca_frontend/src/services/directorService.js\r\nimport axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:8000/api/director/';\r\n\r\n// Función para obtener el token del localStorage\r\nconst obtenerToken = () => {\r\n  return localStorage.getItem('token'); \r\n};\r\n\r\n// Interceptor para añadir el token a las cabeceras de las solicitudes\r\naxios.interceptors.request.use(\r\n  (config) => {\r\n    const token = obtenerToken();\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`; // Usar \"Bearer\"\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n\r\nconst crearCurso = async (cursoData) => {\r\n  try {\r\n    const response = await axios.post(API_URL + 'crear_curso/', cursoData);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error al crear el curso:\", error);\r\n    // Mostrar un mensaje de error al usuario\r\n    if (error.response) {\r\n      // La solicitud se hizo y el servidor respondió con un estado de error\r\n      // (por ejemplo, 4xx o 5xx)\r\n      console.error(\"Datos de la respuesta de error:\", error.response.data);\r\n      console.error(\"Estado de la respuesta de error:\", error.response.status);\r\n      // Puedes mostrar un mensaje al usuario basado en el error.response.status\r\n      if (error.response.status === 400) {\r\n        alert(\"Error al crear el curso: datos inválidos.\");\r\n      } else {\r\n        alert(\"Error al crear el curso. Por favor, inténtalo de nuevo más tarde.\");\r\n      }\r\n    } else if (error.request) {\r\n      // La solicitud se hizo pero no se recibió respuesta\r\n      console.error(\"Solicitud de error:\", error.request);\r\n      alert(\"Error de red: No se pudo conectar con el servidor.\");\r\n    } else {\r\n      // Algo sucedió al configurar la solicitud que provocó un error\r\n      console.error(\"Error:\", error.message);\r\n      alert(\"Error inesperado: \" + error.message);\r\n    }\r\n    // Puedes retornar un valor por defecto o lanzar una excepción\r\n    // para manejar el error en el componente\r\n    return null; // O lanzar una excepción: throw new Error(\"Error al crear el curso\");\r\n  }\r\n};\r\n\r\nconst crearProfesor = async (profesorData) => {\r\n  try {\r\n    const response = await axios.post(API_URL + 'crear_profesor/', profesorData);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error al crear el profesor:\", error);\r\n    // Mostrar un mensaje de error al usuario (similar al manejo de errores en crearCurso)\r\n    return null;\r\n  }\r\n};\r\n\r\nconst crearEstudiante = async (estudianteData) => {\r\n  try {\r\n    const response = await axios.post(API_URL + 'crear_estudiante/', estudianteData);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error al crear el estudiante:\", error);\r\n    // Mostrar un mensaje de error al usuario (similar al manejo de errores en crearCurso)\r\n    return null;\r\n  }\r\n};\r\n\r\nconst crearAsignatura = async (asignaturaData) => {\r\n  try {\r\n    const response = await axios.post(API_URL + 'crear_asignatura/', asignaturaData);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error al crear la asignatura:\", error);\r\n    // Mostrar un mensaje de error al usuario (similar al manejo de errores en crearCurso)\r\n    return null;\r\n  }\r\n};\r\n\r\nconst obtenerCursos = async () => {\r\n  try {\r\n    const response = await axios.get(API_URL + 'cursos/');\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error al obtener los cursos:\", error);\r\n    // Mostrar un mensaje de error al usuario (similar al manejo de errores en crearCurso)\r\n    return [];\r\n  }\r\n};\r\n\r\nconst obtenerProfesores = async () => {\r\n  try {\r\n    const response = await axios.get(API_URL + 'profesores/');\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error al obtener los profesores:\", error);\r\n    // Mostrar un mensaje de error al usuario (similar al manejo de errores en crearCurso)\r\n    return [];\r\n  }\r\n};\r\n\r\nconst obtenerEstudiantes = async () => {\r\n  try {\r\n    const response = await axios.get(API_URL + 'estudiantes/');\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error al obtener los estudiantes:\", error);\r\n    // Mostrar un mensaje de error al usuario (similar al manejo de errores en crearCurso)\r\n    return [];\r\n  }\r\n};\r\n\r\nconst obtenerAsignaturas = async () => {\r\n  try {\r\n    const response = await axios.get(API_URL + 'asignaturas/');\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error al obtener las asignaturas:\", error);\r\n    // Mostrar un mensaje de error al usuario (similar al manejo de errores en crearCurso)\r\n    return [];\r\n  }\r\n};\r\n\r\nconst obtenerReporteAsistencia = async () => {\r\n  try {\r\n    const response = await axios.get(API_URL + 'reporte_asistencia/');\r\n    return response;\r\n  } catch (error) {\r\n    console.error(\"Error al obtener el reporte de asistencia:\", error);\r\n    // Mostrar un mensaje de error al usuario (similar al manejo de errores en crearCurso)\r\n    return null;\r\n  }\r\n};\r\n\r\nconst obtenerReporteCalificaciones = async () => {\r\n  try {\r\n    const response = await axios.get(API_URL + 'reporte_calificaciones/');\r\n    return response;\r\n  } catch (error) {\r\n    console.error(\"Error al obtener el reporte de calificaciones:\", error);\r\n    // Mostrar un mensaje de error al usuario (similar al manejo de errores en crearCurso)\r\n    return null;\r\n  }\r\n};\r\n\r\nconst directorService = {\r\n  crearCurso,\r\n  crearProfesor,\r\n  crearEstudiante,\r\n  crearAsignatura,\r\n  obtenerCursos,\r\n  obtenerProfesores,\r\n  obtenerEstudiantes,\r\n  obtenerAsignaturas,\r\n  obtenerReporteAsistencia,\r\n  obtenerReporteCalificaciones,\r\n};\r\n\r\nexport default directorService;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}