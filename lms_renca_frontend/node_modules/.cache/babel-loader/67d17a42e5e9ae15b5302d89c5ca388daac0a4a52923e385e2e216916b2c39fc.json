{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:8000/api/municipalidad/';\nconst authHeader = () => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    return {\n      Authorization: `Bearer ${token}`\n    };\n  }\n  return {};\n};\nexport const AdministradorService = {\n  // Función para crear un colegio\n  crearColegio: async data => {\n    try {\n      const response = await axios.post(`${API_BASE_URL}colegios/`, data, {\n        headers: authHeader()\n      });\n      return response.data;\n    } catch (error) {\n      console.error(\"Error al crear colegio:\", error);\n      throw error;\n    }\n  },\n  // Función para crear un director\n  crearDirector: async data => {\n    try {\n      const response = await axios.post(`${API_BASE_URL}directores/`, data, {\n        headers: authHeader()\n      });\n      return response.data;\n    } catch (error) {\n      console.error(\"Error al crear director:\", error);\n      throw error;\n    }\n  },\n  // Función para obtener municipalidades\n  obtenerMunicipalidades: async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}municipalidades/`, {\n        headers: authHeader()\n      });\n      return response.data.municipalidades;\n    } catch (error) {\n      console.error(\"Error al obtener municipalidades:\", error);\n      throw error;\n    }\n  },\n  // Función para obtener colegios\n  obtenerColegios: async municipalidadId => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}colegios/${municipalidadId}/`);\n      return response.data;\n    } catch (error) {\n      console.error(\"Error al obtener colegios:\", error);\n      throw error;\n    }\n  },\n  // Función para obtener directores\n  obtenerDirectores: async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}directores/`, {\n        headers: authHeader()\n      });\n      return response.data.directores;\n    } catch (error) {\n      console.error(\"Error al obtener directores:\", error);\n      throw error;\n    }\n  },\n  // Funcion para obtener los directores sin colegio asociado\n  obtenerDirectoresSinColegio: async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}directores/sin-colegio/`, {\n        headers: authHeader()\n      });\n      return response.data.directores;\n    } catch (error) {\n      console.error(\"Error al obtener directores sin colegio:\", error);\n      throw error;\n    }\n  },\n  // Función para obtener cursos\n  obtenerCursos: async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}cursos/`, {\n        headers: authHeader()\n      });\n      return response.data.cursos;\n    } catch (error) {\n      console.error(\"Error al obtener cursos:\", error);\n      throw error;\n    }\n  },\n  // Función para obtener asignaturas\n  obtenerAsignaturas: async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}asignaturas/`, {\n        headers: authHeader()\n      });\n      return response.data.asignaturas;\n    } catch (error) {\n      console.error(\"Error al obtener asignaturas:\", error);\n      throw error;\n    }\n  },\n  // Función para obtener inscripciones\n  obtenerInscripciones: async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}inscripciones/`, {\n        headers: authHeader()\n      });\n      return response.data.inscripciones;\n    } catch (error) {\n      console.error(\"Error al obtener inscripciones:\", error);\n      throw error;\n    }\n  },\n  // Función para eliminar colegio\n  eliminarColegio: async id => {\n    try {\n      const response = await axios.delete(`${API_BASE_URL}colegios/eliminar/${id}/`, {\n        headers: authHeader()\n      });\n      return response.data;\n    } catch (error) {\n      console.error(\"Error al eliminar colegio:\", error);\n      throw error;\n    }\n  },\n  // Función para obtener resultados\n  obtenerResultados: async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}resultados/`, {\n        headers: authHeader()\n      });\n      return response.data;\n    } catch (error) {\n      console.error(\"Error al obtener resultados:\", error);\n      throw error;\n    }\n  }\n};\nexport default AdministradorService;","map":{"version":3,"names":["axios","API_BASE_URL","authHeader","token","localStorage","getItem","Authorization","AdministradorService","crearColegio","data","response","post","headers","error","console","crearDirector","obtenerMunicipalidades","get","municipalidades","obtenerColegios","municipalidadId","obtenerDirectores","directores","obtenerDirectoresSinColegio","obtenerCursos","cursos","obtenerAsignaturas","asignaturas","obtenerInscripciones","inscripciones","eliminarColegio","id","delete","obtenerResultados"],"sources":["C:/Users/aggro/OneDrive/Desktop/LMS/lms_renca_frontend/src/services/administradorService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = 'http://localhost:8000/api/municipalidad/';\r\n\r\nconst authHeader = () => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n        return { Authorization: `Bearer ${token}` };\r\n    }\r\n    return {};\r\n};\r\n\r\nexport const AdministradorService = {\r\n    // Función para crear un colegio\r\n    crearColegio: async (data) => {\r\n        try {\r\n            const response = await axios.post(`${API_BASE_URL}colegios/`, data, { headers: authHeader() });\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error(\"Error al crear colegio:\", error);\r\n            throw error;\r\n        }\r\n    },\r\n    // Función para crear un director\r\n    crearDirector: async (data) => {\r\n        try {\r\n            const response = await axios.post(`${API_BASE_URL}directores/`, data, { headers: authHeader() });\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error(\"Error al crear director:\", error);\r\n            throw error;\r\n        }\r\n    },\r\n    // Función para obtener municipalidades\r\n    obtenerMunicipalidades: async () => {\r\n        try {\r\n            const response = await axios.get(`${API_BASE_URL}municipalidades/`, { headers: authHeader() });\r\n            return response.data.municipalidades;\r\n        } catch (error) {\r\n            console.error(\"Error al obtener municipalidades:\", error);\r\n            throw error;\r\n        }\r\n    },\r\n    // Función para obtener colegios\r\n    obtenerColegios: async (municipalidadId) => {\r\n        try {\r\n            const response = await axios.get(`${API_BASE_URL}colegios/${municipalidadId}/`);\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error(\"Error al obtener colegios:\", error);\r\n            throw error;\r\n        }\r\n    },\r\n    // Función para obtener directores\r\n    obtenerDirectores: async () => {\r\n        try {\r\n            const response = await axios.get(`${API_BASE_URL}directores/`, { headers: authHeader() });\r\n            return response.data.directores;\r\n        } catch (error) {\r\n            console.error(\"Error al obtener directores:\", error);\r\n            throw error;\r\n        }\r\n    },\r\n    // Funcion para obtener los directores sin colegio asociado\r\n    obtenerDirectoresSinColegio: async () => {\r\n        try {\r\n            const response = await axios.get(`${API_BASE_URL}directores/sin-colegio/`, { headers: authHeader() });\r\n            return response.data.directores;\r\n        } catch (error) {\r\n            console.error(\"Error al obtener directores sin colegio:\", error);\r\n            throw error;\r\n        }\r\n    },\r\n    // Función para obtener cursos\r\n    obtenerCursos: async () => {\r\n        try {\r\n            const response = await axios.get(`${API_BASE_URL}cursos/`, { headers: authHeader() });\r\n            return response.data.cursos;\r\n        } catch (error) {\r\n            console.error(\"Error al obtener cursos:\", error);\r\n            throw error;\r\n        }\r\n    },\r\n    // Función para obtener asignaturas\r\n    obtenerAsignaturas: async () => {\r\n        try {\r\n            const response = await axios.get(`${API_BASE_URL}asignaturas/`, { headers: authHeader() });\r\n            return response.data.asignaturas;\r\n        } catch (error) {\r\n            console.error(\"Error al obtener asignaturas:\", error);\r\n            throw error;\r\n        }\r\n    },\r\n    // Función para obtener inscripciones\r\n    obtenerInscripciones: async () => {\r\n        try {\r\n            const response = await axios.get(`${API_BASE_URL}inscripciones/`, { headers: authHeader() });\r\n            return response.data.inscripciones;\r\n        } catch (error) {\r\n            console.error(\"Error al obtener inscripciones:\", error);\r\n            throw error;\r\n        }\r\n    },\r\n    // Función para eliminar colegio\r\n    eliminarColegio: async (id) => {\r\n        try {\r\n            const response = await axios.delete(`${API_BASE_URL}colegios/eliminar/${id}/`, { headers: authHeader() });\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error(\"Error al eliminar colegio:\", error);\r\n            throw error;\r\n        }\r\n    },\r\n    // Función para obtener resultados\r\n    obtenerResultados: async () => {\r\n        try {\r\n            const response = await axios.get(`${API_BASE_URL}resultados/`, { headers: authHeader() });\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error(\"Error al obtener resultados:\", error);\r\n            throw error;\r\n        }\r\n    },\r\n};\r\n\r\nexport default AdministradorService;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}