{"ast":null,"code":"// LMS/lms_renca/src/components/administradorService.js\nimport axios from 'axios';\nconst API_BASE_URL = 'http://localhost:8000/api/municipalidades/';\nconst authHeader = () => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    return {\n      Authorization: `Bearer ${token}`\n    };\n  }\n  return {};\n};\nexport const AdministradorService = {\n  // Función para crear un colegio\n  crear_colegio: async data => {\n    try {\n      const response = await axios.post(`${API_BASE_URL}crear_colegio/`, data, {\n        headers: authHeader()\n      });\n      return response.data;\n    } catch (error) {\n      console.error(\"Error al crear colegio:\", error);\n      throw error;\n    }\n  },\n  // Función para crear un director\n  crear_director: async data => {\n    try {\n      const response = await axios.post(`${API_BASE_URL}crear_director/`, data, {\n        headers: authHeader()\n      });\n      return response.data;\n    } catch (error) {\n      console.error(\"Error al crear director:\", error);\n      throw error;\n    }\n  },\n  // Función para obtener municipalidades\n  obtener_municipalidades: async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}obtener_municipalidades/`, {\n        headers: authHeader()\n      });\n      return response.data.municipalidades;\n    } catch (error) {\n      console.error(\"Error al obtener municipalidades:\", error);\n      throw error;\n    }\n  },\n  // Función para obtener colegios\n  obtener_colegios: async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}obtener_colegios/`, {\n        headers: authHeader()\n      });\n      return response.data.colegios;\n    } catch (error) {\n      console.error(\"Error al obtener colegios:\", error);\n      throw error;\n    }\n  },\n  // Función para obtener directores\n  obtener_directores: async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}obtener_directores/`, {\n        headers: authHeader()\n      });\n      return response.data.directores;\n    } catch (error) {\n      console.error(\"Error al obtener directores:\", error);\n      throw error;\n    }\n  },\n  // Función para obtener cursos\n  obtener_cursos: async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}obtener_cursos/`, {\n        headers: authHeader()\n      });\n      return response.data.cursos;\n    } catch (error) {\n      console.error(\"Error al obtener cursos:\", error);\n      throw error;\n    }\n  },\n  // Función para obtener asignaturas\n  obtener_asignaturas: async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}obtener_asignaturas/`, {\n        headers: authHeader()\n      });\n      return response.data.asignaturas;\n    } catch (error) {\n      console.error(\"Error al obtener asignaturas:\", error);\n      throw error;\n    }\n  },\n  // Función para obtener inscripciones\n  obtener_inscripciones: async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}obtener_incripciones/`, {\n        headers: authHeader()\n      });\n      return response.data.inscripciones;\n    } catch (error) {\n      console.error(\"Error al obtener inscripciones:\", error);\n      throw error;\n    }\n  },\n  // Función para eliminar colegio\n  eliminar_colegio: async id => {\n    try {\n      const response = await axios.delete(`${API_BASE_URL}eliminar_colegio/${id}/`, {\n        headers: authHeader()\n      });\n      return response.data;\n    } catch (error) {\n      console.error(\"Error al eliminar colegio:\", error);\n      throw error;\n    }\n  }\n};\nexport default AdministradorService;","map":{"version":3,"names":["axios","API_BASE_URL","authHeader","token","localStorage","getItem","Authorization","AdministradorService","crear_colegio","data","response","post","headers","error","console","crear_director","obtener_municipalidades","get","municipalidades","obtener_colegios","colegios","obtener_directores","directores","obtener_cursos","cursos","obtener_asignaturas","asignaturas","obtener_inscripciones","inscripciones","eliminar_colegio","id","delete"],"sources":["C:/Users/aggro/OneDrive/Desktop/LMS/lms_renca_frontend/src/services/administradorService.js"],"sourcesContent":["// LMS/lms_renca/src/components/administradorService.js\r\nimport axios from 'axios';\r\n\r\nconst API_BASE_URL = 'http://localhost:8000/api/municipalidades/';\r\n\r\nconst authHeader = () => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      return { Authorization: `Bearer ${token}` };\r\n    }\r\n    return {};\r\n};\r\n\r\nexport const AdministradorService = {\r\n    // Función para crear un colegio\r\n    crear_colegio: async (data) => {\r\n        try {\r\n            const response = await axios.post(`${API_BASE_URL}crear_colegio/`, data, { headers: authHeader() });\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error(\"Error al crear colegio:\", error);\r\n            throw error;\r\n        }\r\n    },\r\n    // Función para crear un director\r\n    crear_director: async (data) => {\r\n        try {\r\n            const response = await axios.post(`${API_BASE_URL}crear_director/`, data, { headers: authHeader() });\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error(\"Error al crear director:\", error);\r\n            throw error;\r\n        }\r\n    },\r\n    // Función para obtener municipalidades\r\n    obtener_municipalidades: async () => {\r\n        try {\r\n            const response = await axios.get(`${API_BASE_URL}obtener_municipalidades/`, { headers: authHeader() });\r\n            return response.data.municipalidades;\r\n        } catch (error) {\r\n            console.error(\"Error al obtener municipalidades:\", error);\r\n            throw error;\r\n        }\r\n    },\r\n    // Función para obtener colegios\r\n    obtener_colegios: async () => {\r\n        try {\r\n            const response = await axios.get(`${API_BASE_URL}obtener_colegios/`, { headers: authHeader() });\r\n            return response.data.colegios;\r\n        } catch (error) {\r\n            console.error(\"Error al obtener colegios:\", error);\r\n            throw error;\r\n        }\r\n    },\r\n    // Función para obtener directores\r\n    obtener_directores: async () => {\r\n        try {\r\n            const response = await axios.get(`${API_BASE_URL}obtener_directores/`, { headers: authHeader() });\r\n            return response.data.directores;\r\n        } catch (error) {\r\n            console.error(\"Error al obtener directores:\", error);\r\n            throw error;\r\n        }\r\n    },\r\n    // Función para obtener cursos\r\n    obtener_cursos: async () => {\r\n        try {\r\n            const response = await axios.get(`${API_BASE_URL}obtener_cursos/`, { headers: authHeader() });\r\n            return response.data.cursos;\r\n        } catch (error) {\r\n            console.error(\"Error al obtener cursos:\", error);\r\n            throw error;\r\n        }\r\n    },\r\n    // Función para obtener asignaturas\r\n    obtener_asignaturas: async () => {\r\n        try {\r\n            const response = await axios.get(`${API_BASE_URL}obtener_asignaturas/`, { headers: authHeader() });\r\n            return response.data.asignaturas;\r\n        } catch (error) {\r\n            console.error(\"Error al obtener asignaturas:\", error);\r\n            throw error;\r\n        }\r\n    },\r\n    // Función para obtener inscripciones\r\n    obtener_inscripciones: async () => {\r\n        try {\r\n            const response = await axios.get(`${API_BASE_URL}obtener_incripciones/`, { headers: authHeader() });\r\n            return response.data.inscripciones;\r\n        } catch (error) {\r\n            console.error(\"Error al obtener inscripciones:\", error);\r\n            throw error;\r\n        }\r\n    },\r\n    // Función para eliminar colegio\r\n    eliminar_colegio: async (id) => {\r\n        try {\r\n            const response = await axios.delete(`${API_BASE_URL}eliminar_colegio/${id}/`, { headers: authHeader() });\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error(\"Error al eliminar colegio:\", error);\r\n            throw error;\r\n        }\r\n    },\r\n};\r\n\r\nexport default AdministradorService;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}