{"ast":null,"code":"//LMS/lms_renca/src/components/estudianteService.js\nimport axios from 'axios';\nconst API_BASE_URL = 'http://localhost:8000/api/estudiante/';\nexport const EstudianteService = {\n  //funcion que obtiene las asignaturas y cursos de un estudiante\n  obtener_cursos_y_asignaturas: async (estudianteRut, cursoId, asignaturaId) => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}obtener-cursos-y-asignaturas/${estudianteRut}/${cursoId}/${asignaturaId}/`);\n      return response.data;\n    } catch (error) {\n      console.error(\"Error al obtener cursos y asignaturas:\", error);\n      throw error;\n    }\n  },\n  //funcion que obtiene las calificaciones del estudiante logeado\n  obtener_calificaciones: async estudianteRut => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}calificaciones/${estudianteRut}/`);\n      return response.data;\n    } catch (error) {\n      console.error(\"Error al obtener calificaciones:\", error);\n      throw error;\n    }\n  },\n  //funcion que obtiene la asistencia del estudiante logeado\n  obtener_asistencia: async estudianteRut => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}asistencias/${estudianteRut}/`);\n      return response.data;\n    } catch (error) {\n      console.error(\"Error al obtener asistencia:\", error);\n      throw error;\n    }\n  },\n  //funcion que obtiene los recursos asociados a las asignaturas que tiene el curso en el cual esta inscrito el estudiante\n  obtener_recursos: async (estudianteRut, asignaturaId) => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}recursos-asignatura/<int:asignatura_id>/${estudianteRut}/${asignaturaId}/`);\n      return response.data;\n    } catch (error) {\n      console.error(\"Error al obtener recursos:\", error);\n      throw error;\n    }\n  },\n  //funcion que permite descargar los recursos asociados a las asignaturas que tiene el curso en el cual esta inscrito el estudiante\n  descargar_recurso: async recursoId => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}recursos/<int:recurso_id>/${recursoId}/`);\n      return response.data;\n    } catch (error) {\n      console.error(\"Error al descargar recurso:\", error);\n      throw error;\n    }\n  },\n  //funcion que obtiene los foros asociados a las asignaturas que tiene el curso en el cual esta inscrito el estudiante\n  obtener_foros: async (estudianteRut, asignaturaId) => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}foros-asignatura/<int:asignatura_id>/${estudianteRut}/${asignaturaId}/`);\n      return response.data;\n    } catch (error) {\n      console.error(\"Error al obtener foros:\", error);\n      throw error;\n    }\n  },\n  //Permite al estudiante participar en foros creando temas o respondiendo mensajes.\n  participar_foro: async (foroId, mensaje) => {\n    try {\n      const response = await axios.post(`${API_BASE_URL}foro/<int:foro_id>/participar/${foroId}/`, {\n        mensaje\n      });\n      return response.data;\n    } catch (error) {\n      console.error(\"Error al participar en foro:\", error);\n      throw error;\n    }\n  },\n  //Obtiene las notas del estudiante que esta logeado en el sistema y las agrupa por asignatura.\n  obtener_notas: async estudianteRut => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}notas/<str:estudiante_rut>/${estudianteRut}/`);\n      return response.data;\n    } catch (error) {\n      console.error(\"Error al obtener notas:\", error);\n      throw error;\n    }\n  },\n  //Obtiene los promedios de un estudiante con filtro por asignatura y semestre\n  obtener_promedios: async (estudianteRut, asignaturaId, semestre) => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}promedios/${estudianteRut}/${asignaturaId}/${semestre}/`);\n      return response.data;\n    } catch (error) {\n      console.error(\"Error al obtener promedios:\", error);\n      throw error;\n    }\n  },\n  //    \"\"\"Obtiene las tareas del estudiante asociados al curso en el cual esta inscrito.\"\"\"\n  obtener_tareas: async estudianteRut => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}tareas/${estudianteRut}/`);\n      return response.data;\n    } catch (error) {\n      console.error(\"Error al obtener tareas:\", error);\n      throw error;\n    }\n  },\n  //    \"\"\"Obtiene el porcentaje de asistencia del estudiante logeado en el sistema y lo agrupamos por asignatura\"\"\"\n  obtener_porcentaje_asistencia: async estudianteRut => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}asistencia/${estudianteRut}/`);\n      return response.data;\n    } catch (error) {\n      console.error(\"Error al obtener porcentaje de asistencia:\", error);\n      throw error;\n    }\n  },\n  //\"\"\"Obtiene los reportes de progreso del estudiante.\"\"\"\n  obtener_reportes_progreso: async estudianteRut => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}resultados${estudianteRut}/`);\n      return response.data;\n    } catch (error) {\n      console.error(\"Error al obtener reportes de progreso:\", error);\n      throw error;\n    }\n  }\n};\nexport default EstudianteService;","map":{"version":3,"names":["axios","API_BASE_URL","EstudianteService","obtener_cursos_y_asignaturas","estudianteRut","cursoId","asignaturaId","response","get","data","error","console","obtener_calificaciones","obtener_asistencia","obtener_recursos","descargar_recurso","recursoId","obtener_foros","participar_foro","foroId","mensaje","post","obtener_notas","obtener_promedios","semestre","obtener_tareas","obtener_porcentaje_asistencia","obtener_reportes_progreso"],"sources":["C:/Users/aggro/OneDrive/Desktop/LMS/lms_renca_frontend/src/services/estudianteService.js"],"sourcesContent":["//LMS/lms_renca/src/components/estudianteService.js\r\nimport axios from 'axios';\r\n\r\nconst API_BASE_URL = 'http://localhost:8000/api/estudiante/';\r\n\r\nexport const EstudianteService = {\r\n    //funcion que obtiene las asignaturas y cursos de un estudiante\r\n    obtener_cursos_y_asignaturas: async (estudianteRut, cursoId, asignaturaId) => {\r\n        try {\r\n            const response = await axios.get(`${API_BASE_URL}obtener-cursos-y-asignaturas/${estudianteRut}/${cursoId}/${asignaturaId}/`);\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error(\"Error al obtener cursos y asignaturas:\", error);\r\n            throw error;\r\n        }\r\n    },\r\n    //funcion que obtiene las calificaciones del estudiante logeado\r\n    obtener_calificaciones: async (estudianteRut) => {\r\n        try {\r\n            const response = await axios.get(`${API_BASE_URL}calificaciones/${estudianteRut}/`);\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error(\"Error al obtener calificaciones:\", error);\r\n            throw error;\r\n        }\r\n    },\r\n    //funcion que obtiene la asistencia del estudiante logeado\r\n    obtener_asistencia: async (estudianteRut) => {\r\n        try {\r\n            const response = await axios.get(`${API_BASE_URL}asistencias/${estudianteRut}/`);\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error(\"Error al obtener asistencia:\", error);\r\n            throw error;\r\n        }\r\n    },\r\n    //funcion que obtiene los recursos asociados a las asignaturas que tiene el curso en el cual esta inscrito el estudiante\r\n    obtener_recursos: async (estudianteRut, asignaturaId) => {\r\n        try {\r\n            const response = await axios.get(`${API_BASE_URL}recursos-asignatura/<int:asignatura_id>/${estudianteRut}/${asignaturaId}/`);\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error(\"Error al obtener recursos:\", error);\r\n            throw error;\r\n        }\r\n    },\r\n    //funcion que permite descargar los recursos asociados a las asignaturas que tiene el curso en el cual esta inscrito el estudiante\r\n    descargar_recurso: async (recursoId) => {\r\n        try {\r\n            const response = await axios.get(`${API_BASE_URL}recursos/<int:recurso_id>/${recursoId}/`);\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error(\"Error al descargar recurso:\", error);\r\n            throw error;\r\n        }\r\n    },\r\n    //funcion que obtiene los foros asociados a las asignaturas que tiene el curso en el cual esta inscrito el estudiante\r\n    obtener_foros: async (estudianteRut, asignaturaId) => {\r\n        try {\r\n            const response = await axios.get(`${API_BASE_URL}foros-asignatura/<int:asignatura_id>/${estudianteRut}/${asignaturaId}/`);\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error(\"Error al obtener foros:\", error);\r\n            throw error;\r\n        }\r\n    },\r\n    //Permite al estudiante participar en foros creando temas o respondiendo mensajes.\r\n    participar_foro: async (foroId, mensaje) => {\r\n        try {\r\n            const response = await axios.post(`${API_BASE_URL}foro/<int:foro_id>/participar/${foroId}/`, {\r\n                mensaje\r\n            });\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error(\"Error al participar en foro:\", error);\r\n            throw error;\r\n        }\r\n    },\r\n    //Obtiene las notas del estudiante que esta logeado en el sistema y las agrupa por asignatura.\r\n    obtener_notas: async (estudianteRut) => {\r\n        try {\r\n            const response = await axios.get(`${API_BASE_URL}notas/<str:estudiante_rut>/${estudianteRut}/`);\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error(\"Error al obtener notas:\", error);\r\n            throw error;\r\n        }\r\n    },\r\n    //Obtiene los promedios de un estudiante con filtro por asignatura y semestre\r\n    obtener_promedios: async (estudianteRut, asignaturaId, semestre) => {\r\n        try {\r\n            const response = await axios.get(`${API_BASE_URL}promedios/${estudianteRut}/${asignaturaId}/${semestre}/`);\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error(\"Error al obtener promedios:\", error);\r\n            throw error;\r\n        }\r\n    },\r\n    //    \"\"\"Obtiene las tareas del estudiante asociados al curso en el cual esta inscrito.\"\"\"\r\n    obtener_tareas: async (estudianteRut) => {\r\n        try {\r\n            const response = await axios.get(`${API_BASE_URL}tareas/${estudianteRut}/`);\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error(\"Error al obtener tareas:\", error);\r\n            throw error;\r\n        }\r\n    },\r\n    //    \"\"\"Obtiene el porcentaje de asistencia del estudiante logeado en el sistema y lo agrupamos por asignatura\"\"\"\r\n    obtener_porcentaje_asistencia: async (estudianteRut) => {\r\n        try {\r\n            const response = await axios.get(`${API_BASE_URL}asistencia/${estudianteRut}/`);\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error(\"Error al obtener porcentaje de asistencia:\", error);\r\n            throw error;\r\n        }\r\n    },\r\n    //\"\"\"Obtiene los reportes de progreso del estudiante.\"\"\"\r\n    obtener_reportes_progreso: async (estudianteRut) => {\r\n        try {\r\n            const response = await axios.get(`${API_BASE_URL}resultados${estudianteRut}/`);\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error(\"Error al obtener reportes de progreso:\", error);\r\n            throw error;\r\n        }\r\n    },\r\n\r\n};\r\n\r\nexport default EstudianteService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}