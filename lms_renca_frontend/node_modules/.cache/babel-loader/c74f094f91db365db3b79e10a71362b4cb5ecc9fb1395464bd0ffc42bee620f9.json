{"ast":null,"code":"// LMS/lms_renca_frontend/src/services/authService.js\nimport axios from 'axios';\nconst API_URL = 'http://localhost:8000/api/usuario/';\nconst login = async (rut, password) => {\n  try {\n    const response = await axios.post(API_URL + 'token/', {\n      // O la URL que uses para obtener el token JWT\n      rut,\n      password\n    });\n\n    // Guardar el token JWT en localStorage\n    localStorage.setItem('token', response.data.access); // Asumiendo que la respuesta tiene un campo 'access' con el token\n    return response.data;\n  } catch (error) {\n    console.error(\"Error al iniciar sesi贸n:\", error);\n    throw error; // Re-lanzar el error para manejarlo en el componente\n  }\n};\nconst getUserData = async () => {\n  try {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      throw new Error('No se ha encontrado un token de acceso');\n    }\n    const response = await axios.get(API_URL + 'profile/', {\n      headers: {\n        'Authorization': `Bearer ${token}` // Enviar el token JWT con Bearer\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error al obtener los datos del usuario:\", error);\n    throw error; // Re-lanzar el error para manejarlo en el componente\n  }\n};\nconst authService = {\n  login,\n  // Agregar la funci贸n login al servicio\n  getUserData\n};\nexport default authService;","map":{"version":3,"names":["axios","API_URL","login","rut","password","response","post","localStorage","setItem","data","access","error","console","getUserData","token","getItem","Error","get","headers","authService"],"sources":["C:/Users/aggro/OneDrive/Desktop/LMS/lms_renca_frontend/src/services/authService.js"],"sourcesContent":["// LMS/lms_renca_frontend/src/services/authService.js\r\nimport axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:8000/api/usuario/';\r\n\r\nconst login = async (rut, password) => {\r\n  try {\r\n    const response = await axios.post(API_URL + 'token/', { // O la URL que uses para obtener el token JWT\r\n      rut,\r\n      password,\r\n    });\r\n    \r\n    // Guardar el token JWT en localStorage\r\n    localStorage.setItem('token', response.data.access); // Asumiendo que la respuesta tiene un campo 'access' con el token\r\n    return response.data; \r\n  } catch (error) {\r\n    console.error(\"Error al iniciar sesi贸n:\", error);\r\n    throw error; // Re-lanzar el error para manejarlo en el componente\r\n  }\r\n};\r\n\r\nconst getUserData = async () => {\r\n  try {\r\n    const token = localStorage.getItem('token');\r\n    \r\n    if (!token) {\r\n      throw new Error('No se ha encontrado un token de acceso');\r\n    }\r\n    \r\n    const response = await axios.get(API_URL + 'profile/', {\r\n      headers: {\r\n        'Authorization': `Bearer ${token}` // Enviar el token JWT con Bearer\r\n      }\r\n    });\r\n    \r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error al obtener los datos del usuario:\", error);\r\n    throw error; // Re-lanzar el error para manejarlo en el componente\r\n  }\r\n};\r\n\r\nconst authService = {\r\n  login, // Agregar la funci贸n login al servicio\r\n  getUserData,\r\n};\r\n\r\nexport default authService;\r\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,oCAAoC;AAEpD,MAAMC,KAAK,GAAG,MAAAA,CAAOC,GAAG,EAAEC,QAAQ,KAAK;EACrC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAACL,OAAO,GAAG,QAAQ,EAAE;MAAE;MACtDE,GAAG;MACHC;IACF,CAAC,CAAC;;IAEF;IACAG,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,QAAQ,CAACI,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC;IACrD,OAAOL,QAAQ,CAACI,IAAI;EACtB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD,MAAMA,KAAK,CAAC,CAAC;EACf;AACF,CAAC;AAED,MAAME,WAAW,GAAG,MAAAA,CAAA,KAAY;EAC9B,IAAI;IACF,MAAMC,KAAK,GAAGP,YAAY,CAACQ,OAAO,CAAC,OAAO,CAAC;IAE3C,IAAI,CAACD,KAAK,EAAE;MACV,MAAM,IAAIE,KAAK,CAAC,wCAAwC,CAAC;IAC3D;IAEA,MAAMX,QAAQ,GAAG,MAAML,KAAK,CAACiB,GAAG,CAAChB,OAAO,GAAG,UAAU,EAAE;MACrDiB,OAAO,EAAE;QACP,eAAe,EAAE,UAAUJ,KAAK,EAAE,CAAC;MACrC;IACF,CAAC,CAAC;IAEF,OAAOT,QAAQ,CAACI,IAAI;EACtB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC;IAC/D,MAAMA,KAAK,CAAC,CAAC;EACf;AACF,CAAC;AAED,MAAMQ,WAAW,GAAG;EAClBjB,KAAK;EAAE;EACPW;AACF,CAAC;AAED,eAAeM,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}