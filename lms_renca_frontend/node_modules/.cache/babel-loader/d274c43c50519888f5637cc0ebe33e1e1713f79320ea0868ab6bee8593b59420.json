{"ast":null,"code":"// LMS/lms_renca/src/components/administradorService.js\nimport axios from 'axios';\nconst API_BASE_URL = 'http://localhost:8000/api/municipalidades/';\nconst authHeader = () => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    return {\n      Authorization: `Bearer ${token}`\n    };\n  }\n  return {};\n};\nexport const AdministradorService = {\n  //funcion que obtiene los colegios\n  obtenerColegios: async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}obtener_colegios/`, {\n        headers: authHeader()\n      });\n      return response.data;\n    } catch (error) {\n      console.error(\"Error al obtener los colegios:\", error);\n      throw error;\n    }\n  },\n  //funcion que elimina un colegio\n  eliminarColegio: async id => {\n    try {\n      await axios.delete(`${API_BASE_URL}eliminar_colegio/${id}/`, {\n        headers: authHeader()\n      });\n    } catch (error) {\n      console.error(\"Error al eliminar el colegio:\", error);\n      throw error;\n    }\n  },\n  //funcion que obtiene las municipalidades\n  obtenerMunicipalidades: async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}obtener_municipalidades/`, {\n        headers: authHeader()\n      });\n      return response.data;\n    } catch (error) {\n      console.error(\"Error al obtener las municipalidades:\", error);\n      throw error;\n    }\n  },\n  //funcion que obtiene los directores\n  obtenerDirectores: async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}obtener_directores/`, {\n        headers: authHeader()\n      });\n      return response.data;\n    } catch (error) {\n      console.error(\"Error al obtener los directores:\", error);\n      throw error;\n    }\n  },\n  //funcion que crea un colegio\n  crearColegio: async (nombre, direccion, telefono, directorId, municipalidadId) => {\n    try {\n      await axios.post(`${API_BASE_URL}crear_colegio/`, {\n        nombre,\n        direccion,\n        telefono,\n        director: directorId,\n        municipalidad: municipalidadId\n      }, {\n        headers: authHeader()\n      });\n    } catch (error) {\n      console.error(\"Error al crear el colegio:\", error);\n      throw error;\n    }\n  },\n  //funcion que crea un director\n  crearDirector: async (rut, nombre, apellido, email, telefono, password) => {\n    try {\n      await axios.post(`${API_BASE_URL}crear_director/`, {\n        rut,\n        nombre,\n        apellido,\n        email,\n        telefono,\n        password\n      }, {\n        headers: authHeader()\n      });\n    } catch (error) {\n      console.error(\"Error al crear el director:\", error);\n      throw error;\n    }\n  },\n  //funcion que elimina un director\n  eliminarDirector: async id => {\n    try {\n      await axios.delete(`${API_BASE_URL}eliminar_director/${id}/`, {\n        headers: authHeader()\n      });\n    } catch (error) {\n      console.error(\"Error al eliminar el director:\", error);\n      throw error;\n    }\n  }\n};\nexport default AdministradorService;","map":{"version":3,"names":["axios","API_BASE_URL","authHeader","token","localStorage","getItem","Authorization","AdministradorService","obtenerColegios","response","get","headers","data","error","console","eliminarColegio","id","delete","obtenerMunicipalidades","obtenerDirectores","crearColegio","nombre","direccion","telefono","directorId","municipalidadId","post","director","municipalidad","crearDirector","rut","apellido","email","password","eliminarDirector"],"sources":["C:/Users/aggro/OneDrive/Desktop/LMS/lms_renca_frontend/src/services/administradorService.js"],"sourcesContent":["// LMS/lms_renca/src/components/administradorService.js\r\nimport axios from 'axios';\r\n\r\n\r\nconst API_BASE_URL = 'http://localhost:8000/api/municipalidades/';\r\n\r\nconst authHeader = () => {\r\n  const token = localStorage.getItem('token');\r\n  if (token) {\r\n    return { Authorization: `Bearer ${token}` };\r\n  }\r\n  return {};\r\n};\r\n\r\nexport const AdministradorService = {\r\n\r\n  //funcion que obtiene los colegios\r\n  obtenerColegios: async () => {\r\n    try {\r\n      const response = await axios.get(`${API_BASE_URL}obtener_colegios/`, { headers: authHeader() });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(\"Error al obtener los colegios:\", error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  //funcion que elimina un colegio\r\n  eliminarColegio: async (id) => {\r\n    try {\r\n      await axios.delete(`${API_BASE_URL}eliminar_colegio/${id}/`, { headers: authHeader() });\r\n    } catch (error) {\r\n      console.error(\"Error al eliminar el colegio:\", error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  //funcion que obtiene las municipalidades\r\n  obtenerMunicipalidades: async () => {\r\n    try {\r\n      const response = await axios.get(`${API_BASE_URL}obtener_municipalidades/`, { headers: authHeader() });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(\"Error al obtener las municipalidades:\", error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  //funcion que obtiene los directores\r\n  obtenerDirectores: async () => {\r\n    try {\r\n      const response = await axios.get(`${API_BASE_URL}obtener_directores/`, { headers: authHeader() });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(\"Error al obtener los directores:\", error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  //funcion que crea un colegio\r\n  crearColegio: async (nombre, direccion, telefono, directorId, municipalidadId) => {\r\n    try {\r\n      await axios.post(`${API_BASE_URL}crear_colegio/`, {\r\n        nombre,\r\n        direccion,\r\n        telefono,\r\n        director: directorId,\r\n        municipalidad: municipalidadId\r\n      }, { headers: authHeader() });\r\n    } catch (error) {\r\n      console.error(\"Error al crear el colegio:\", error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  //funcion que crea un director\r\n  crearDirector: async (rut, nombre, apellido, email, telefono, password) => {\r\n    try {\r\n      await axios.post(`${API_BASE_URL}crear_director/`, {\r\n        rut,\r\n        nombre,\r\n        apellido,\r\n        email,\r\n        telefono,\r\n        password\r\n      }, { headers: authHeader() });\r\n    } catch (error) {\r\n      console.error(\"Error al crear el director:\", error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  //funcion que elimina un director\r\n  eliminarDirector: async (id) => {\r\n    try {\r\n      await axios.delete(`${API_BASE_URL}eliminar_director/${id}/`, { headers: authHeader() });\r\n    } catch (error) {\r\n      console.error(\"Error al eliminar el director:\", error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  \r\n  \r\n\r\n\r\n};\r\n\r\nexport default AdministradorService;"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAGzB,MAAMC,YAAY,GAAG,4CAA4C;AAEjE,MAAMC,UAAU,GAAGA,CAAA,KAAM;EACvB,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACT,OAAO;MAAEG,aAAa,EAAE,UAAUH,KAAK;IAAG,CAAC;EAC7C;EACA,OAAO,CAAC,CAAC;AACX,CAAC;AAED,OAAO,MAAMI,oBAAoB,GAAG;EAElC;EACAC,eAAe,EAAE,MAAAA,CAAA,KAAY;IAC3B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAC,GAAGT,YAAY,mBAAmB,EAAE;QAAEU,OAAO,EAAET,UAAU,CAAC;MAAE,CAAC,CAAC;MAC/F,OAAOO,QAAQ,CAACG,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACtD,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAE,eAAe,EAAE,MAAOC,EAAE,IAAK;IAC7B,IAAI;MACF,MAAMhB,KAAK,CAACiB,MAAM,CAAC,GAAGhB,YAAY,oBAAoBe,EAAE,GAAG,EAAE;QAAEL,OAAO,EAAET,UAAU,CAAC;MAAE,CAAC,CAAC;IACzF,CAAC,CAAC,OAAOW,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACrD,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAK,sBAAsB,EAAE,MAAAA,CAAA,KAAY;IAClC,IAAI;MACF,MAAMT,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAC,GAAGT,YAAY,0BAA0B,EAAE;QAAEU,OAAO,EAAET,UAAU,CAAC;MAAE,CAAC,CAAC;MACtG,OAAOO,QAAQ,CAACG,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;MAC7D,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAM,iBAAiB,EAAE,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMV,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAC,GAAGT,YAAY,qBAAqB,EAAE;QAAEU,OAAO,EAAET,UAAU,CAAC;MAAE,CAAC,CAAC;MACjG,OAAOO,QAAQ,CAACG,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MACxD,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAO,YAAY,EAAE,MAAAA,CAAOC,MAAM,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,eAAe,KAAK;IAChF,IAAI;MACF,MAAMzB,KAAK,CAAC0B,IAAI,CAAC,GAAGzB,YAAY,gBAAgB,EAAE;QAChDoB,MAAM;QACNC,SAAS;QACTC,QAAQ;QACRI,QAAQ,EAAEH,UAAU;QACpBI,aAAa,EAAEH;MACjB,CAAC,EAAE;QAAEd,OAAO,EAAET,UAAU,CAAC;MAAE,CAAC,CAAC;IAC/B,CAAC,CAAC,OAAOW,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClD,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAgB,aAAa,EAAE,MAAAA,CAAOC,GAAG,EAAET,MAAM,EAAEU,QAAQ,EAAEC,KAAK,EAAET,QAAQ,EAAEU,QAAQ,KAAK;IACzE,IAAI;MACF,MAAMjC,KAAK,CAAC0B,IAAI,CAAC,GAAGzB,YAAY,iBAAiB,EAAE;QACjD6B,GAAG;QACHT,MAAM;QACNU,QAAQ;QACRC,KAAK;QACLT,QAAQ;QACRU;MACF,CAAC,EAAE;QAAEtB,OAAO,EAAET,UAAU,CAAC;MAAE,CAAC,CAAC;IAC/B,CAAC,CAAC,OAAOW,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnD,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAqB,gBAAgB,EAAE,MAAOlB,EAAE,IAAK;IAC9B,IAAI;MACF,MAAMhB,KAAK,CAACiB,MAAM,CAAC,GAAGhB,YAAY,qBAAqBe,EAAE,GAAG,EAAE;QAAEL,OAAO,EAAET,UAAU,CAAC;MAAE,CAAC,CAAC;IAC1F,CAAC,CAAC,OAAOW,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACtD,MAAMA,KAAK;IACb;EACF;AAMF,CAAC;AAED,eAAeN,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}